import sys
import google.generativeai as palm

# Configure the Google PaLM API with your API key
palm.configure(api_key='AIzaSyDXNVDbOLLUKukRp5pxnzZGzX3KNk8MPtY')


def runWithCmdLineArg():
    """
    This function is designed to be run with command line arguments.
    It reads the content of the files provided as arguments,
    and uses the Google PaLM API to generate a text response.
    """
    # Initialize variables
    files = []
    Instruction = None

    # Check each argument to see if it's a file or an instruction
    for arg in sys.argv[1:]:
        try:
            with open(arg, 'r') as f:
                files.append(arg)
        except IOError:
            Instruction = str(arg)

    # Read the content of each file
    contents = ""
    for file in files:
        with open(file, 'r') as f:
            contents += str(f.read())

    # Generate the prompt
    prompt = "{} {}".format(contents, Instruction if Instruction else "")

    # Use the Google PaLM API to generate a text response
    response = palm.generate_text(
        model="models/text-bison-001",
        prompt=prompt,
        temperature=0,  # The maximum length of the response
        max_output_tokens=800,
    )

    # Print the response
    print(response.result)


def interactiveMode():
    """
    This function provides an interactive mode where the user can ask questions
    and get responses generated by the Google PaLM API.
    """
    while True:
        user_input = input("codeGuru>>> ")
        if user_input.lower() == "help":
            print("Ask about anything!")
            print("e.g. 'What is the capital of France?')")
            print("You can also ask about code")
            print("e.g. 'What is the syntax for a for loop?')")
            print("type 'exit' to quit")
            continue
        if user_input.lower() == 'exit':
            break
        response = palm.generate_text(
          model="models/text-bison-001",
          prompt=user_input,
          temperature=0,  # The maximum length of the response
          max_output_tokens=800,
        )
        print(response.result)


if __name__ == "__main__":
    if len(sys.argv) >= 2:
        runWithCmdLineArg()
    else:
        interactiveMode()
